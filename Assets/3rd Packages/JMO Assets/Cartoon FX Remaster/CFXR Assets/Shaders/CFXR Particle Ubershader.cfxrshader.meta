fileFormatVersion: 2
guid: 1a29b4d27eb8b04479ef89c00dea533d
AssetOrigin:
  serializedVersion: 1
  productId: 109565
  packageName: Cartoon FX Remaster Free
  packageVersion: R 1.4
  assetPath: Assets/JMO Assets/Cartoon FX Remaster/CFXR Assets/Shaders/CFXR Particle
    Ubershader.cfxrshader
  uploadId: 668589
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: fe56ec25963759b49955809beeb4324b, type: 3}
  renderPipelineDetection: 0
  detectedRenderPipeline: Universal Render Pipeline
  strippedLinesCount: 98
  shaderSourceCode: "//--------------------------------------------------------------------------------------------------------------------------------\n//
    Cartoon FX\n// (c) 2012-2020 Jean Moreno\n//--------------------------------------------------------------------------------------------------------------------------------\n\nShader
    \"Cartoon FX/Remaster/Particle Ubershader\"\n{\n\tProperties\n\t{\n\t//# Blending\n\t//#\n\t\t[Enum(UnityEngine.Rendering.BlendMode)]
    _SrcBlend (\"Blend Source\", Float) = 5\n\t\t[Enum(UnityEngine.Rendering.BlendMode)]
    _DstBlend (\"Blend Destination\", Float) = 10\n\t\t[KeywordEnumNoPrefix(Alpha
    Blending, _ALPHABLEND_ON, Alpha Blending Premultiplied, _ALPHAPREMULTIPLY_ON,
    Multiplicative, _ALPHAMODULATE_ON, Additive, _CFXR_ADDITIVE)] _BlendingType (\"Blending
    Type\", Float) = 0\n\n\t//# \n\t\t[ToggleNoKeyword] _ZWrite (\"Depth Write\",
    Float) = 0\n\t\t[Toggle(_ALPHATEST_ON)] _UseAlphaClip (\"Alpha Clipping (Cutout)\",
    Float) = 0\n\t//# IF_KEYWORD _ALPHATEST_ON\n\t\t_Cutoff (\"Cutoff Threshold\",
    Range(0.001,1)) = 0.1\n\t//# END_IF\n\t\n\t//# --------------------------------------------------------\n\t\n\t\t[Toggle(_FADING_ON)]
    _UseSP (\"Soft Particles\", Float) = 0\n\t//# IF_KEYWORD _FADING_ON\n\t\t_SoftParticlesFadeDistanceNear
    (\"Near Fade\", Float) = 0\n\t\t_SoftParticlesFadeDistanceFar (\"Far Fade\",
    Float) = 1\n\t//# END_IF\n\n\t//# \n\n\t\t[Toggle(_CFXR_EDGE_FADING)] _UseEF
    (\"Edge Fade\", Float) = 0\n\t//# IF_KEYWORD _CFXR_EDGE_FADING\n\t\t_EdgeFadePow
    (\"Edge Fade Power\", Float) = 1\n\t//# END_IF\n\n\t//# \n\n\t//# ========================================================\n\n\t//#
    Effects\n\t//#\n\n\t\t[Toggle(_CFXR_DISSOLVE)] _UseDissolve (\"Enable Dissolve\",
    Float) = 0\n\t//# IF_KEYWORD _CFXR_DISSOLVE\n\t\t_DissolveTex (\"Dissolve Texture\",
    2D) = \"gray\" {}\n\t\t_DissolveSmooth (\"Dissolve Smoothing\", Range(0.0001,0.5))
    = 0.1\n\t\t[ToggleNoKeyword] _InvertDissolveTex (\"Invert Dissolve Texture\",
    Float) = 0\n\t\t[ToggleNoKeyword] _DoubleDissolve (\"Double Dissolve\", Float)
    = 0\n\t\t[Toggle] _UseDissolveOffsetUV (\"Dissolve offset along X\", Float) =
    0\n\t//# IF_PROPERTY _UseDissolveOffsetUV > 0\n\t\t_DissolveScroll (\"UV Scrolling\",
    Vector) = (0,0,0,0)\n\t//# END_IF\n\t//# END_IF\n\n\t//# --------------------------------------------------------\n\n\t\t[Toggle(_CFXR_UV_DISTORTION)]
    _UseUVDistortion (\"Enable UV Distortion\", Float) = 0\n\t//# IF_KEYWORD _CFXR_UV_DISTORTION\n\t\t\n\t\t[NoScaleOffset]
    _DistortTex (\"Distortion Texture\", 2D) = \"gray\" {}\n\t\t_DistortScrolling
    (\"Scroll (XY) Tile (ZW)\", Vector) = (0,0,1,1)\n\t\t[Toggle] _UseUV2Distortion
    (\"Use UV2\", Float) = 0\n\t\t_Distort (\"Distortion Strength\", Range(0,2.0))
    = 0.1\n\t\t[ToggleNoKeyword] _FadeAlongU (\"Fade along Y\", Float) = 0\n\t\t[Toggle]
    _UVDistortionAdd (\"Add to base UV\", Float) = 0\n\t//# END_IF\n\n\t//# ========================================================\n\n\t//#
    Colors\n\t//#\n\n\t\t[NoScaleOffset] _MainTex (\"Texture\", 2D) = \"white\" {}\n\t\t[Toggle]
    _SingleChannel (\"Single Channel Texture\", Float) = 0\n\n\t//# --------------------------------------------------------\n\n\t\t[KeywordEnum(Off,1x,2x)]
    _CFXR_OVERLAYTEX (\"Enable Overlay Texture\", Float) = 0\n\t//# IF_KEYWORD _CFXR_OVERLAYTEX_1X
    || _CFXR_OVERLAYTEX_2X\n\t\t[Enum(RGBA,0,RGB,1,A,2)] _CFXR_OVERLAYBLEND (\"Overlay
    Blend Channels\", Float) = 0\n\t\t[NoScaleOffset] _OverlayTex (\"Overlay Texture\",
    2D) = \"white\" {}\n\t\t_OverlayTex_Scroll (\"Overlay Scrolling / Scale\", Vector)
    = (0.1,0.1,1,1)\n\t//# END_IF\n\n\t//# --------------------------------------------------------\n\n\t\t[Toggle(_FLIPBOOK_BLENDING)]
    _UseFB (\"Flipbook Blending\", Float) = 0\n\n\t//# --------------------------------------------------------\n\n\t\t[Toggle(_CFXR_SECONDCOLOR_LERP)]
    _UseSecondColor (\"Secondary Vertex Color (TEXCOORD2)\", Float) = 0\n\t//# IF_KEYWORD
    _CFXR_SECONDCOLOR_LERP\n\t\t[NoScaleOffset] _SecondColorTex (\"Second Color Map\",
    2D) = \"black\" {}\n\t\t_SecondColorSmooth (\"Second Color Smoothing\", Range(0.0001,0.5))
    = 0.2\n\t//# END_IF\n\n\t//# --------------------------------------------------------\n\n\t\t[Toggle(_CFXR_FONT_COLORS)]
    _UseFontColor (\"Use Font Colors\", Float) = 0\n\n//\t//# --------------------------------------------------------\n//\n//\t[Toggle(_CFXR_GRADIENTMAP)]
    _UseGradientMap (\"Gradient Map\", Float) = 0\n//\t//# IF_KEYWORD _CFXR_GRADIENTMAP\n//\t\t[NoScaleOffset]
    _GradientMap (\"Gradient Map\", 2D) = \"black\" {}\n//\t//# END_IF\n\n\t//# --------------------------------------------------------\n\n\t\t
    _HdrMultiply (\"HDR Multiplier\", Float) = 1\n\n\t//# --------------------------------------------------------\n\t\n\t//#
    Lighting\n\t//#\n\n\t\t[KeywordEnumNoPrefix(Off, _, Direct, _CFXR_LIGHTING_DIRECT,
    Indirect, _CFXR_LIGHTING_INDIRECT, Both, _CFXR_LIGHTING_ALL)] _UseLighting (\"Mode\",
    Float) = 0\n\t//# IF_KEYWORD _CFXR_LIGHTING_DIRECT || _CFXR_LIGHTING_ALL\n\t\t_DirectLightingRamp
    (\"Direct Lighting Ramp\", Range(0,1)) = 1.0\n\t//# END_IF\n\t//# \n\t//# IF_KEYWORD
    _CFXR_LIGHTING_DIRECT || _CFXR_LIGHTING_INDIRECT || _CFXR_LIGHTING_ALL\n\t\t[Toggle(_NORMALMAP)]
    _UseNormalMap (\"Enable Normal Map\", Float) = 0\n\t//# IF_KEYWORD _NORMALMAP\n\t\t[NoScaleOffset]
    _BumpMap (\"Normal Map\", 2D) = \"bump\" {}\n\t\t_BumpScale (\"Normal Scale\",
    Range(-1, 1)) = 1.0\n\t//# END_IF\n\t//# \n\t\t[Toggle(_EMISSION)] _UseEmission
    (\"Enable Emission (TEXCOORD2)\", Float) = 0\n\t//# \n\t\t[Toggle(_CFXR_LIGHTING_WPOS_OFFSET)]
    _UseLightingWorldPosOffset (\"Enable World Pos. Offset\", Float) = 0\n\t//# IF_KEYWORD
    _CFXR_LIGHTING_WPOS_OFFSET\n\t\t_LightingWorldPosStrength (\"Offset Strength\",
    Range(0,1)) = 0.2\n\t//# END_IF\n\t//# \n\t\t[Toggle(_CFXR_LIGHTING_BACK)] _UseBackLighting
    (\"Enable Backlighting\", Float) = 0\n\t//# IF_KEYWORD _CFXR_LIGHTING_BACK\n\t\t_DirLightScreenAtten
    (\"Dir. Light Screen Attenuation\", Range(0, 5)) = 1.0\n\t\t_BacklightTransmittance
    (\"Backlight Transmittance\", Range(0, 2)) = 1.0\n\t//# END_IF\n\t//# \n\t//#
    IF_KEYWORD _CFXR_LIGHTING_INDIRECT || _CFXR_LIGHTING_ALL\n\t\t_IndirectLightingMix
    (\"Indirect Lighting Mix\", Range(0,1)) = 0.5\n\t//# END_IF\n\t\t_ShadowColor
    (\"Shadow Color\", Color) = (0,0,0,1)\n\t//# \n\t//# END_IF\n\n\t//# ========================================================\n\t//#
    Shadows\n\t//#\n\n\t\t[KeywordEnum(Off,On,CustomTexture)] _CFXR_DITHERED_SHADOWS
    (\"Dithered Shadows\", Float) = 0\n\t//# IF_KEYWORD _CFXR_DITHERED_SHADOWS_ON
    || _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE\n\t\t_ShadowStrength\t\t(\"Shadows Strength
    Max\", Range(0,1)) = 1.0\n\t\t//#\tIF_KEYWORD _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE\n\t\t_DitherCustom\t\t(\"Dithering
    3D Texture\", 3D) = \"black\" {}\n\t\t//#\tEND_IF\n\t//# END_IF\n\n//\t\t_ReceivedShadowsStrength
    (\"Received Shadows Strength\", Range(0,1)) = 0.5\n\t}\n\t\n\tCategory\n\t{\n\t\tTags\n\t\t{\n\t\t\t\"Queue\"=\"Transparent\"\n\t\t\t\"IgnoreProjector\"=\"True\"\n\t\t\t\"RenderType\"=\"Transparent\"\n\t\t\t\"PreviewType\"=\"Plane\"\n\t\t}\n\n\t\tBlend
    [_SrcBlend] [_DstBlend], One One\n\t\tZWrite [_ZWrite]\n\t\tCull  Off\n\n\t\t//====================================================================================================================================\n\t\t//
    Universal Rendering Pipeline\n\n\t\tSubshader\n\t\t{\n\t\t\tPass\n\t\t\t{\n\t\t\t\tName
    \"BASE_URP\"\n\t\t\t\tTags { \"LightMode\"=\"UniversalForward\" }\n\n\t\t\t\tCGPROGRAM\n\n\t\t\t\t#pragma
    vertex vertex_program\n\t\t\t\t#pragma fragment fragment_program\n\t\t\t\t\n\t\t\t\t#pragma
    target 2.0\n\t\t\t\t\n\t\t\t\t// #pragma multi_compile_instancing\n\t\t\t\t//
    #pragma instancing_options procedural:ParticleInstancingSetup\n\n\t\t\t\t#pragma
    multi_compile_fog\n\t\t\t\t//#pragma multi_compile_fwdbase\n\t\t\t\t//#pragma
    multi_compile SHADOWS_SCREEN\n\n\t\t\t\t#pragma shader_feature_local _ _CFXR_DISSOLVE\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _CFXR_UV_DISTORTION\n\t\t\t\t// #pragma shader_feature_local
    _ _CFXR_GRADIENTMAP\n\t\t\t\t#pragma shader_feature_local _ _CFXR_SECONDCOLOR_LERP
    _CFXR_FONT_COLORS\n\t\t\t\t#pragma shader_feature_local_fragment _ _CFXR_OVERLAYTEX_1X
    _CFXR_OVERLAYTEX_2X\n\t\t\t\t#pragma shader_feature_local _ _CFXR_EDGE_FADING\n\t\t\t\t#pragma
    shader_feature_local _ _CFXR_LIGHTING_DIRECT _CFXR_LIGHTING_INDIRECT _CFXR_LIGHTING_ALL\n\t\t\t\t#pragma
    shader_feature_local _ _CFXR_LIGHTING_WPOS_OFFSET\n\t\t\t\t#pragma shader_feature_local
    _ _CFXR_LIGHTING_BACK\n\n\t\t\t\t// Using the same keywords as Unity's Standard
    Particle shader to minimize project-wide keyword usage\n\t\t\t\t#pragma shader_feature_local
    _ _NORMALMAP\n\t\t\t\t#pragma shader_feature_local _ _EMISSION\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _FLIPBOOK_BLENDING\n\t\t\t\t#pragma shader_feature_local
    _ _FADING_ON\n\t\t\t\t#pragma shader_feature_local_fragment _ _ALPHATEST_ON\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _ALPHABLEND_ON _ALPHAPREMULTIPLY_ON _ALPHAMODULATE_ON
    _CFXR_ADDITIVE\n\n\t\t\t\t#define CFXR_URP\n\t\t\t\t#define CFXR_UBERSHADER\n\t\t\t\t#include
    \"CFXR_PASSES.cginc\"\n\n\t\t\t\tENDCG\n\t\t\t}\n\t\t\t\n\t\t\t// Same as above
    with 'Universal2D' instead and DISABLE_SOFT_PARTICLES keyword\n\t\t\tPass\n\t\t\t{\n\t\t\t\tName
    \"BASE_URP\"\n\t\t\t\tTags { \"LightMode\"=\"Universal2D\" }\n\n\t\t\t\tCGPROGRAM\n\n\t\t\t\t#pragma
    vertex vertex_program\n\t\t\t\t#pragma fragment fragment_program\n\t\t\t\t\n\t\t\t\t#pragma
    target 2.0\n\t\t\t\t\n\t\t\t\t// #pragma multi_compile_instancing\n\t\t\t\t//
    #pragma instancing_options procedural:ParticleInstancingSetup\n\n\t\t\t\t#pragma
    multi_compile_fog\n\t\t\t\t//#pragma multi_compile_fwdbase\n\t\t\t\t//#pragma
    multi_compile SHADOWS_SCREEN\n\n\t\t\t\t#pragma shader_feature_local _ _CFXR_DISSOLVE\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _CFXR_UV_DISTORTION\n\t\t\t\t// #pragma shader_feature_local
    _ _CFXR_GRADIENTMAP\n\t\t\t\t#pragma shader_feature_local _ _CFXR_SECONDCOLOR_LERP
    _CFXR_FONT_COLORS\n\t\t\t\t#pragma shader_feature_local_fragment _ _CFXR_OVERLAYTEX_1X
    _CFXR_OVERLAYTEX_2X\n\t\t\t\t#pragma shader_feature_local _ _CFXR_EDGE_FADING\n\t\t\t\t#pragma
    shader_feature_local _ _CFXR_LIGHTING_DIRECT _CFXR_LIGHTING_INDIRECT _CFXR_LIGHTING_ALL\n\t\t\t\t#pragma
    shader_feature_local _ _CFXR_LIGHTING_WPOS_OFFSET\n\t\t\t\t#pragma shader_feature_local
    _ _CFXR_LIGHTING_BACK\n\n\t\t\t\t// Using the same keywords as Unity's Standard
    Particle shader to minimize project-wide keyword usage\n\t\t\t\t#pragma shader_feature_local
    _ _NORMALMAP\n\t\t\t\t#pragma shader_feature_local _ _EMISSION\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _FLIPBOOK_BLENDING\n\t\t\t\t#pragma shader_feature_local
    _ _FADING_ON\n\t\t\t\t#pragma shader_feature_local_fragment _ _ALPHATEST_ON\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _ALPHABLEND_ON _ALPHAPREMULTIPLY_ON _ALPHAMODULATE_ON
    _CFXR_ADDITIVE\n\n\t\t\t\t#define CFXR_UPR\n\t\t\t\t#define DISABLE_SOFT_PARTICLES\n\t\t\t\t#define
    CFXR_UBERSHADER\n\t\t\t\t#include \"CFXR_PASSES.cginc\"\n\n\t\t\t\tENDCG\n\t\t\t}\n\n\t\t\t//--------------------------------------------------------------------------------------------------------------------------------\n\n\t\t\tPass\n\t\t\t{\n\t\t\t\tName
    \"ShadowCaster\"\n\t\t\t\tTags { \"LightMode\" = \"ShadowCaster\" }\n\n\t\t\t\tBlendOp
    Add\n\t\t\t\tBlend One Zero\n\t\t\t\tZWrite On\n\t\t\t\tCull Off\n\n\t\t\t\tCGPROGRAM\n\n\t\t\t\t#pragma
    vertex vertex_program\n\t\t\t\t#pragma fragment fragment_program\n\n\t\t\t\t#pragma
    shader_feature_local _ _CFXR_DISSOLVE\n\t\t\t\t#pragma shader_feature_local_fragment
    _ _CFXR_UV_DISTORTION\n\t\t\t\t#pragma shader_feature_local_fragment _ _CFXR_OVERLAYTEX_1X
    _CFXR_OVERLAYTEX_2X\n\t\t\t\t#pragma shader_feature_local_fragment _ _FLIPBOOK_BLENDING\n\n\t\t\t\t#pragma
    shader_feature_local_fragment _ _ALPHATEST_ON\n\t\t\t\t#pragma shader_feature_local_fragment
    _ _ALPHABLEND_ON _ALPHAPREMULTIPLY_ON _ALPHAMODULATE_ON _CFXR_ADDITIVE\n\n\t\t\t\t#pragma
    multi_compile_shadowcaster\n\t\t\t\t#pragma shader_feature_local _ _CFXR_DITHERED_SHADOWS_ON
    _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE\n\n\t\t\t#if (_CFXR_DITHERED_SHADOWS_ON
    || _CFXR_DITHERED_SHADOWS_CUSTOMTEXTURE) && !defined(SHADER_API_GLES)\n\t\t\t\t#pragma
    target 3.0\t\t//needed for VPOS\n\t\t\t#endif\n\n\t\t\t\t#define CFXR_UPR\n\t\t\t\t#define
    PASS_SHADOW_CASTER\n\t\t\t\t#define CFXR_UBERSHADER\n\t\t\t\t#include \"CFXR_PASSES.cginc\"\n\n\t\t\t\tENDCG\n\t\t\t}\n\t\t}\n\n\t}\n\t\n\tCustomEditor
    \"CartoonFX.MaterialInspector\"\n}\n\n"
  shaderName: Cartoon FX/Remaster/Particle Ubershader
  shaderErrors: []
  variantCount: 12300
  variantCountUsed: 4
